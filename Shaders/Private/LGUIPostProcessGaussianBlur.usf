// Copyright 2019 LexLiu. All Rights Reserved.
#include "LGUIPostProcessVertexShader.usf"
#include "/Engine/Public/Platform.ush"

static float _Offset[3] =
{
    0.0,
	1.3846153846,
	3.2307692308
};

static float _Weight[3] =
{
    0.2270270270,
	0.3162162162,
	0.0702702703
};
Texture2D _MainTex;
SamplerState _MainTexSampler;
float2 _HorizontalOrVerticalFilter;
float2 _InvSize;
float _BlurStrength;
//#define USE_MASK true
#if USE_MASK
Texture2D _MaskTex;
SamplerState _MaskTexSampler;
#endif

float4 GaussianBlurPS(SimpleVSToPS input) : SV_Target0
{
#if USE_MASK
    float mask = _MaskTex.Sample(_MaskTexSampler, input.uv).r;
#endif
    float4 color = _MainTex.Sample(_MainTexSampler, input.uv) * _Weight[0];
    for (int i = 1; i < 3; i++)
    {
        float uvOffset = _Offset[i];
#if USE_MASK
        uvOffset *= mask;
#endif
        color += _MainTex.Sample(_MainTexSampler, input.uv + uvOffset * _InvSize * _BlurStrength * _HorizontalOrVerticalFilter) * _Weight[i];
        color += _MainTex.Sample(_MainTexSampler, input.uv - uvOffset * _InvSize * _BlurStrength * _HorizontalOrVerticalFilter) * _Weight[i];
    }
    return color;
}
